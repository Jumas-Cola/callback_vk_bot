<?php
include "vk_api.php"; //ะะพะดะบะปััะฐะตะผ ะฑะธะฑะปะธะพัะตะบั ะดะปั ัะฐะฑะพัั ั api vk

function getToken($client_id, $client_secret, $login, $password) {
	$file = 'access_token.txt';
	if (is_file($file)) {
		$accessToken = file_get_contents($file);
	} else {
		$getToken = json_decode(file_get_contents('https://oauth.vk.com/token?grant_type=password&client_id='.$client_id.'&client_secret='.$client_secret.'&username='.$login.'&password='.$password.'&v=5.37&2fa_supported=1'));
	    $accessToken = $getToken->access_token;
	}
	file_put_contents($file, $accessToken);
	return $accessToken;
}

//**********CONFIG**************
const CLIENT_ID = 3140623;
const CLIENT_SECRET = 'VeWdmVclDCtn6ihuP1nt';
const LOGIN = 'login';
const PASSWORD = 'password';
const GROUP_TOKEN = 'group_token'; //ัะพั ัะฐะผัะน ะดะปะธะฝะฝัะน ะบะปัั ะดะพัััะฟะฐ ัะพะพะฑัะตััะฒะฐ
const CONFIRMATION_TOKEN = 'confirmation_token'; //ะฝะฐะฟัะธะผะตั c40b9566, ะฒะฒะตะดะธัะต ัะฒะพะน
const SECRET_KEY = 'secret_key';
const API_VERSION = '5.80'; //ะฒะฐัะฐ ะฒะตััะธั ะธัะฟะพะปัะทัะตะผะพะณะพ api
const ADMIN_ID = 123456; //ัะพั, ะบะพะผั ะฑัะดะตั ะฟัะธัะปะฐะฝะพ ะพะฟะพะฒะตัะตะฝะธะต ะฟัะธ ะฝะตะพะฑัะพะดะธะผะพััะธ ัะฒัะทะฐัััั ั ะฐะดะผะธะฝะพะผ
define('ACCESS_TOKEN', getToken(CLIENT_ID, CLIENT_SECRET, LOGIN, PASSWORD));

define('PICTURE_GROUPS', array(-166989747, -162289145, -168649092)); //ัะฟะธัะพะบ ะณััะฟะฟ, ะพัะบัะดะฐ ะฑะตััะผ ะบะฐััะธะฝะบะธ
define('GIF_GROUPS', array(-39615703, -152567386)); //ัะฟะธัะพะบ ะณััะฟะฟ, ะพัะบัะดะฐ ะฑะตััะผ gif-ะบะธ
define('ANIME_GROUPS', array(-98592298)); //ัะฟะธัะพะบ ะณััะฟะฟ, ะพัะบัะดะฐ ะฑะตััะผ ะฝะพะฒะธะฝะบะธ ะฐะฝะธะผะต
define('STOP_WORDS', array('ะบะพะฝะบััั','ัะพะทัะณััั','ะฟัะธะท','ะธัะพะณะธ','ัะตะทัะปััะฐัั')); //ัะปะพะฒะฐ ะดะปั ัะธะปัััะฐัะธะธ (ััะพะฑั ะฝะต ะพัะฟัะฐะฒะธัั ัะตะบะปะฐะผะฝัั ะบะฐััะธะฝะบั/ะบะพะฝะบััั ะธ ัะด)
//******************************

const BTN_IMG =  [["action" => 'send_img'], "ะปะพะปะธ", "blue"]; 
const BTN_GIF =  [["action" => 'send_gif'], "ะณะธั", "blue"]; 
const BTN_ANIME = [["action" => 'send_gif'], "ะฐะฝะธะผะต", "blue"]; 
const BTN_ADMIN = [["action" => 'letter_to_admin'], "ะกะฒัะทะฐัััั ั ะฐะดะผะธะฝะพะผ", "white"]; 

if (!isset($_REQUEST)) {
    return;
}

$data = json_decode(file_get_contents('php://input')); //ะะพะปััะฐะตั ะธ ะดะตะบะพะดะธััะตั JSON ะฟัะธัะตะดัะธะน ะธะท ะะ

if(strcmp($data->secret, SECRET_KEY) !== 0 && strcmp($data->type, 'confirmation') !== 0) // ะฟัะพะฒะตััะตะผ secretKey
    return;
    
$vk = new vk_api(GROUP_TOKEN, API_VERSION); // ัะพะทะดะฐะฝะธะต ัะบะทะตะผะฟะปััะฐ ะบะปะฐััะฐ ัะฐะฑะพัั ั api, ะฟัะธะฝะธะผะฐะตั ะบะปัั ะธ ะฒะตััะธั api

//ะัะพะฒะตััะตะผ, ััะพ ะฝะฐัะพะดะธััั ะฒ ะฟะพะปะต "type"
switch ($data->type) {
    
    case 'confirmation': //ะัะปะธ ััะพ ัะฒะตะดะพะผะปะตะฝะธะต ะดะปั ะฟะพะดัะฒะตัะถะดะตะฝะธั ะฐะดัะตัะฐ ัะตัะฒะตัะฐ
        exit(CONFIRMATION_TOKEN); //ะะฐะฒะตััะฐะตะผ ัะบัะธะฟั ะพัะฟัะฐะฒะบะพะน ะบะปััะฐ

    case 'message_new': //ะัะปะธ ััะพ ัะฒะตะดะพะผะปะตะฝะธะต ะพ ะฝะพะฒะพะผ ัะพะพะฑัะตะฝะธะธ
    	$peer_id = $data->object->from_id; //ะะพะปััะฐะตะผ id ะฟะพะปัะทะพะฒะฐัะตะปั, ะบะพัะพััะน ะฝะฐะฟะธัะฐะป ัะพะพะฑัะตะฝะธะต
		$message = $data->object->text;
		$message = mb_strtolower($message);
		if (isset($data->object->payload)){  //ะฟะพะปััะฐะตะผ payload
	        	$payload = json_decode($data->object->payload, True);
	   	} else {
	      		$payload = null;
	   	}
	   	if ($message == 'ะฝะฐัะฐัั' or $message == 'start') { //ะัะปะธ ะฝะฐะถะฐัะฐ ะบะฝะพะฟะบะฐ ะฝะฐัะฐัั 
  			$resp = $vk->sendButton($peer_id, 'ะัะธะฒะตั, ัะฐะดะฐ ัะตะฑั ะฒะธะดะตัั ๐<br>'.
											'ะ ะฝะฐัะตะน ะณััะฟะฟะต ัะฐะฑะพัะฐะตั ะปะพะปะธ-ะฑะพั ๐<br>'.
											'ะปะพะปะธ/loli - ัะปััะฐะนะฝะฐั ะบะฐััะธะฝะบะฐ ะปะพะปะตัะบะธ โค<br>'.
											'ะณะธั/gif - ัะปััะฐะนะฝะฐั ะฐะฝะธะผะต-ะณะธัะบะฐ ๐<br>'.
											'ะฐะฝะธะผะต/anime - ะธ ะพะฝะฐ ะฟะพัะพะฒะตััะตั ะฐะฝะธะผะต โจ', 
											[ //ะัะฟัะฐะฒะปัะตะผ ะบะฝะพะฟะบะธ ะฟะพะปัะทะพะฒะฐัะตะปั
						  						[BTN_IMG, BTN_GIF, BTN_ANIME],
						  						[BTN_ADMIN]
						  					]);

  			$vk->sendOK(); //ะะพะฒะพัะธะผ vk, ััะพ ะผั ะฟัะธะฝัะปะธ callback
            break;
        //..ะฟัะพะฒะตััะตะผ, ะตััั ะปะธ ะฒ ัะตะบััะต ัะพะพะฑัะตะฝะธั ะทะฐะฟัะพั ะฝะฐ ะพัะฟัะฐะฒะบั ะบะฐััะธะฝะบะธ
        } elseif ((strpos($message, 'ะปะพะปะธ') !== false) or (strpos($message, 'loli') !== false) or (strpos($message, 'ััะฝ') !== false) or (strpos($message, 'ะปะพะปั') !== false) or (strpos($message, 'ะปะพะปั') !== false)) {
                //...ะฒัะฑะธัะฐะตะผ ัะปััะฐะนะฝัั ะณััะฟะฟั ะธะท ัะฟะธัะบะฐ
                $rand_elem = array_rand(PICTURE_GROUPS);
                $group_id = PICTURE_GROUPS[$rand_elem];
                $user = new vk_api(ACCESS_TOKEN, API_VERSION); // ัะพะทะดะฐะฝะธะต ัะบะทะตะผะฟะปััะฐ ะบะปะฐััะฐ ัะฐะฑะพัั ั api, ะฟัะธะฝะธะผะฐะตั ะบะปัั ะธ ะฒะตััะธั api
                $posts = $user->request('wall.get', ['owner_id' => $group_id,
							                        'count' => 100,
							                    	'filter' => 'owner',
							                        'access_token' => ACCESS_TOKEN,
							                    	'v' => API_VERSION]);
                $posts_array = $posts['items'];
                //...ะฟะพะบะฐ ะฝะต ะฟะพะปััะธะผ ะพะฑัะตะบั ัะพัะพ - ะฒัะฑะธัะฐะตะผ ัะปััะฐะนะฝัะน ะฟะพัั ะธะท ััะฐ ะธ ะฟัะพะฒะตััะตะผ: ะตััั ะปะธ ะฟัะธะบัะตะฟะปัะฝะฝัะต ะธะทะพะฑัะฐะถะตะฝะธั/ะฝะตั ะปะธ ััะพะฟ-ัะปะพะฒ ะฒ ัะตะบััะต ะฟะพััะฐ/ะฝะต ัะฒะปัะตััั ะปะธ ะฟะพัั ัะตะบะปะฐะผะฝัะผ
                while (!isset($loli)) {
                  $got_stop_words = FALSE;
                  $i = rand(2, 99);
                  $post = $posts_array[$i];
                  foreach (STOP_WORDS as $word) {
                    if (strpos(mb_strtolower($post['text']), $word) !== false) {
                      $got_stop_words = TRUE;
                      break;
                    }
                  }
                  if (isset($post['attachments']) && !$got_stop_words && ($post['marked_as_ads'] == 0)) {
                    $attachments = $post['attachments'];
                    foreach ($attachments as $attachment) {
                      if ($attachment['type'] == 'photo') {
                        $photo = $attachment['photo'];
                        $loli = sprintf( 'photo%d_%d', $photo['owner_id'], $photo['id']);
                        break;
                      }
                    }
                  }
                }

                //ะก ะฟะพะผะพััั messages.send ะธ ัะพะบะตะฝะฐ ัะพะพะฑัะตััะฒะฐ ะพัะฟัะฐะฒะปัะตะผ ะพัะฒะตัะฝะพะต ัะพะพะฑัะตะฝะธะต ั ะบะฐััะธะฝะบะพะน
                $resp = $vk->request('messages.send', ['message' => 'ะะพัะผะพััะธ, ััะพ ั ะฝะฐัะปะฐ ะดะปั ัะตะฑั:',
									                'peer_id' => $peer_id,
									                'attachment' => $loli,
									                'access_token' => GROUP_TOKEN,
							                     	'v' => API_VERSION]);

                $vk->sendOK(); //ะะพะฒะพัะธะผ vk, ััะพ ะผั ะฟัะธะฝัะปะธ callback
                break;
        //.. ะฟัะพะฒะตััะตะผ, ะตััั ะปะธ ะฒ ัะตะบััะต ัะพะพะฑัะตะฝะธั ะทะฐะฟัะพั ะฝะฐ ะพัะฟัะฐะฒะบั ะณะธัะบะธ
        } elseif ((strpos($message, 'ะณะธั') !== false) or (strpos($message, 'gif') !== false)) {
        		//...ะฒัะฑะธัะฐะตะผ ัะปััะฐะนะฝัั ะณััะฟะฟั ะธะท ัะฟะธัะบะฐ
                $rand_elem = array_rand(GIF_GROUPS);
                $group_id = GIF_GROUPS[$rand_elem];
                $user = new vk_api(ACCESS_TOKEN, API_VERSION); // ัะพะทะดะฐะฝะธะต ัะบะทะตะผะฟะปััะฐ ะบะปะฐััะฐ ัะฐะฑะพัั ั api, ะฟัะธะฝะธะผะฐะตั ะบะปัั ะธ ะฒะตััะธั api
                $posts = $user->request('wall.get', ['owner_id' => $group_id,
							                        'count' => 100,
							                    	'filter' => 'owner',
							                        'access_token' => ACCESS_TOKEN,
							                    	'v' => API_VERSION]);
                $posts_array = $posts['items'];
                //...ะฟะพะบะฐ ะฝะต ะฟะพะปััะธะผ ะพะฑัะตะบั ะณะธั - ะฒัะฑะธัะฐะตะผ ัะปััะฐะนะฝัะน ะฟะพัั ะธะท ััะฐ ะธ ะฟัะพะฒะตััะตะผ: ะตััั ะปะธ ะฟัะธะบัะตะฟะปัะฝะฝัะต ะธะทะพะฑัะฐะถะตะฝะธั/ะฝะตั ะปะธ ััะพะฟ-ัะปะพะฒ ะฒ ัะตะบััะต ะฟะพััะฐ/ะฝะต ัะฒะปัะตััั ะปะธ ะฟะพัั ัะตะบะปะฐะผะฝัะผ
                while (!isset($loli)) {
                  $got_stop_words = FALSE;
                  $i = rand(2, 99);
                  $post = $posts_array[$i];
                  foreach (STOP_WORDS as $word) {
                    if (strpos(mb_strtolower($post['text']), $word) !== false) {
                      $got_stop_words = TRUE;
                      break;
                    }
                  }
                  if (isset($post['attachments']) && !$got_stop_words && ($post['marked_as_ads'] == 0)) {
                    $attachments = $post['attachments'];
                    foreach ($attachments as $attachment) {
                      if ($attachment['type'] == 'doc') {
                        $doc = $attachment['doc'];
                        if ($doc['ext'] == 'gif'){
                        	$loli = sprintf( 'doc%d_%d', $doc['owner_id'], $doc['id']);
                        	break;
                        }
                      }
                    }
                  }
                }

                //ะก ะฟะพะผะพััั messages.send ะธ ัะพะบะตะฝะฐ ัะพะพะฑัะตััะฒะฐ ะพัะฟัะฐะฒะปัะตะผ ะพัะฒะตัะฝะพะต ัะพะพะฑัะตะฝะธะต ั ะบะฐััะธะฝะบะพะน
                $resp = $vk->request('messages.send', ['message' => 'ะะพัะผะพััะธ, ััะพ ั ะฝะฐัะปะฐ ะดะปั ัะตะฑั:',
    									                'peer_id' => $peer_id,
    									                'attachment' => $loli,
								                        'access_token' => GROUP_TOKEN,
								                        'v' => API_VERSION]);

                $vk->sendOK(); //ะะพะฒะพัะธะผ vk, ััะพ ะผั ะฟัะธะฝัะปะธ callback
                break;
         //.. ะฟัะพะฒะตััะตะผ, ะตััั ะปะธ ะฒ ัะตะบััะต ัะพะพะฑัะตะฝะธั ะทะฐะฟัะพั ะฝะฐ ะฐะฝะธะผะต
        } elseif ((strpos($message, 'ะฐะฝะธะผะต') !== false) or (strpos($message, 'anime') !== false) or (strpos($message, 'ะฐะฝะธะผั') !== false)) {
            	//...ะฒัะฑะธัะฐะตะผ ัะปััะฐะนะฝัั ะณััะฟะฟั ะธะท ัะฟะธัะบะฐ
                $rand_elem = array_rand(ANIME_GROUPS);
                $group_id = ANIME_GROUPS[$rand_elem];
                $user = new vk_api(ACCESS_TOKEN, API_VERSION); // ัะพะทะดะฐะฝะธะต ัะบะทะตะผะฟะปััะฐ ะบะปะฐััะฐ ัะฐะฑะพัั ั api, ะฟัะธะฝะธะผะฐะตั ะบะปัั ะธ ะฒะตััะธั api
                $posts = $user->request('wall.get', ['owner_id' => $group_id,
							                        'count' => 100,
							                    	'filter' => 'owner',
							                        'access_token' => ACCESS_TOKEN,
							                    	'v' => API_VERSION]);
                $posts_array = $posts['items'];

                while (!isset($resp)) {
                    //...ะฟะพะบะฐ ะฝะต ะฟะพะปััะธะผ ะฐะฝะธะผะต - ะฒัะฑะธัะฐะตะผ ัะปััะฐะนะฝัะน ะฟะพัั ะธะท ััะฐ ะธ ะฟัะพะฒะตััะตะผ:ะฝะตั ะปะธ ััะพะฟ-ัะปะพะฒ ะฒ ัะตะบััะต ะฟะพััะฐ/ะฝะต ัะฒะปัะตััั ะปะธ ะฟะพัั ัะตะบะปะฐะผะฝัะผ
                    while (!isset($loli)) {
                      $got_stop_words = FALSE;
                      $i = rand(2, 99);
                      $post = $posts_array[$i];
                      foreach ($stop_words as $word) {
                        if (strpos(mb_strtolower($post['text']), $word) !== false) {
                          $got_stop_words = TRUE;
                          break;
                        }
                      }
                      if (isset($post['attachments']) && !$got_stop_words && ($post['marked_as_ads'] == 0)) {
                        $text = '';
                        $attachments = $post['attachments'];
                        foreach ($attachments as $attachment) {
                          if ($attachment['type'] == 'doc') {
                                $doc = $attachment['doc'];
                                $loli .= sprintf( 'doc%d_%d,', $doc['owner_id'], $doc['id']);
                            }
                          if ($attachment['type'] == 'photo') {
                                $photo = $attachment['photo'];
                                $text .= $photo['text'];
                                $loli .= sprintf( 'photo%d_%d,', $photo['owner_id'], $photo['id']);
                            }
                          if ($attachment['type'] == 'video') {
                                $video = $attachment['video'];
                                $loli .= sprintf( 'video%d_%d,', $video['owner_id'], $video['id']);
                            }
                      }
                    }
                  }

                //ะก ะฟะพะผะพััั messages.send ะธ ัะพะบะตะฝะฐ ัะพะพะฑัะตััะฒะฐ ะพัะฟัะฐะฒะปัะตะผ ะพัะฒะตัะฝะพะต ัะพะพะฑัะตะฝะธะต ั ะฐะฝะธะผะต
                try{$resp = $vk->request('messages.send', ['message' => $text,
											                'peer_id' => $peer_id,
											                'attachment' => $loli,
									                        'access_token' => GROUP_TOKEN,
									                        'v' => API_VERSION]);
            		} catch (Exception $e) {}
                }

                $vk->sendOK(); //ะะพะฒะพัะธะผ vk, ััะพ ะผั ะฟัะธะฝัะปะธ callback
                break;

        } else {
        	if ($payload != null && $payload['action']=='letter_to_admin') { // ะตัะปะธ payload ัััะตััะฒัะตั
			    $resp = $vk->request('messages.send', ['message' => sprintf( "ะก ัะพะฑะพะน ัะพัะตั ัะฒัะทะฐัััั @id%d", $peer_id),
										                'peer_id' => ADMIN_ID,
								                        'access_token' => GROUP_TOKEN,
								                        'v' => API_VERSION]);
			    $resp = $vk->request('messages.send', ['message' => "ะะดะผะธะฝั ะพัะฟัะฐะฒะปะตะฝะพ ะพะฟะพะฒะตัะตะฝะธะต, ัะบะพัะพ ะพะฝ ั ัะพะฑะพะน ัะฒัะถะตััั)",
										                'peer_id' => $peer_id,
								                        'access_token' => GROUP_TOKEN,
								                        'v' => API_VERSION]);
				$vk->sendOK(); //ะะพะฒะพัะธะผ vk, ััะพ ะผั ะฟัะธะฝัะปะธ callback
				break;

			} else {
	        	//...ะตัะปะธ ะฒ ัะพะพะฑัะตะฝะธะธ ะฝะต ะฑัะปะพ ะทะฐะฟัะพัะฐ ะฝะฐ ะบะฐััะธะฝะบั - ััะฐะทั ะพัะฟัะฐะฒะปัะตะผ ะพัะฒะตั
	            $resp = $vk->request('messages.send', ['message' => "ะฏ ะพะฑัะทะฐัะตะปัะฝะพ ะฟัะพััั ัะฒะพั ัะพะพะฑัะตะฝะธะต, ะบะฐะบ ัะพะปัะบะพ ัะผะพะณั ๐<br>".
	                                								"ะะต ัะบััะฐะน, ะผะพะถะตัั ะฟะพะบะฐ ะฟะพะปะธััะฐัั ััะตะฝั ะฝะฐัะตะน ะณััะฟะฟั)",
										                'peer_id' => $peer_id,
										                'attachment' => $loli,
								                        'access_token' => GROUP_TOKEN,
								                        'v' => API_VERSION]);

	            $vk->sendOK(); //ะะพะฒะพัะธะผ vk, ััะพ ะผั ะฟัะธะฝัะปะธ callback
	            break;
        	}
        }

    // ะัะปะธ ััะพ ัะฒะตะดะพะผะปะตะฝะธะต ะพ ะฒััะพะดะต ะธะท ะณััะฟะฟั
    case 'group_leave':
        
        $peer_id = $data->object->user_id; // ะฟะพะปััะฐะตะผ id ะฒััะตะดัะตะณะพ ััะฐััะฝะธะบะฐ

        //ะก ะฟะพะผะพััั messages.send ะธ ัะพะบะตะฝะฐ ัะพะพะฑัะตััะฒะฐ ะพัะฟัะฐะฒะปัะตะผ ัะพะพะฑัะตะฝะธะต
        $resp = $vk->request('messages.send', ['message' => "ะะฐะปั, ััะพ ัั ัะถะต ััะพะดะธัั!<br>" .
								                            "ะัะปะธ ะทะฐัะพัะตัั ะฒะตัะฝััััั - ะทะดะตัั ะฒัะตะณะดะฐ ัะตะฑะต ัะฐะดั.<br>" .
								                            "ะฃะดะฐัะธ ัะตะฑะต ใฝ(ใปโใป)๏พ",
											                'peer_id' => $peer_id,
									                        'access_token' => GROUP_TOKEN,
									                        'v' => API_VERSION]);

        $vk->sendOK(); //ะะพะฒะพัะธะผ vk, ััะพ ะผั ะฟัะธะฝัะปะธ callback
        break;
}

?>
